// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TASysOnlineProject.Context;

namespace TASysOnlineProject.Migrations
{
    [DbContext(typeof(TASysOnlineContext))]
    [Migration("20210928140008_TASys_V28")]
    partial class TASys_V28
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.9")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BillTableCourseTable", b =>
                {
                    b.Property<string>("BillTablesId")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CourseTablesId")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("BillTablesId", "CourseTablesId");

                    b.HasIndex("CourseTablesId");

                    b.ToTable("BillTableCourseTable");
                });

            modelBuilder.Entity("CartTableCourseTable", b =>
                {
                    b.Property<string>("CartsId")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CoursesId")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CartsId", "CoursesId");

                    b.HasIndex("CoursesId");

                    b.ToTable("CartTableCourseTable");
                });

            modelBuilder.Entity("CourseTableScheduleTable", b =>
                {
                    b.Property<string>("CoursesId")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SchedulesId")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CoursesId", "SchedulesId");

                    b.HasIndex("SchedulesId");

                    b.ToTable("CourseTableScheduleTable");
                });

            modelBuilder.Entity("CourseTableUserAccountTable", b =>
                {
                    b.Property<string>("CoursesOfLearnerId")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("LearnerAccountsId")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("CoursesOfLearnerId", "LearnerAccountsId");

                    b.HasIndex("LearnerAccountsId");

                    b.ToTable("CourseTableUserAccountTable");
                });

            modelBuilder.Entity("ScheduleTableUserAccountTable", b =>
                {
                    b.Property<string>("SchedulesId")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserAccountsId")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("SchedulesId", "UserAccountsId");

                    b.HasIndex("UserAccountsId");

                    b.ToTable("ScheduleTableUserAccountTable");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.AnswerTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<string>("Content")
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsCorrect")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("QuestionId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("QuestionId");

                    b.ToTable("AnswerTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.BillTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<decimal>("TotalCost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("TotalItem")
                        .HasColumnType("int");

                    b.Property<string>("UserAccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("UserAccountId");

                    b.ToTable("BillTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.CartTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalCourse")
                        .HasColumnType("int");

                    b.Property<string>("UserAccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("UserAccountId")
                        .IsUnique();

                    b.ToTable("CartTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.CommentTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserAccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("CommentTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.CourseSuggestionTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("LevelOfImportance")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Suggestion")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("CourseSuggestionTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.CourseTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<int>("AvailableSlot")
                        .HasColumnType("int");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(18,2)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Feedback")
                        .HasColumnType("Text");

                    b.Property<string>("InstructorId")
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("MaxSlot")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<int>("RatingCount")
                        .HasColumnType("int");

                    b.Property<string>("SubjectId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Summary")
                        .IsRequired()
                        .HasColumnType("Text");

                    b.HasKey("Id");

                    b.HasIndex("InstructorId");

                    b.HasIndex("SubjectId");

                    b.ToTable("CourseTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.CurriCulumTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("CurriCulumTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.DiscountTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Rate")
                        .HasColumnType("real");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("CourseId")
                        .IsUnique();

                    b.ToTable("DiscountTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.LessonTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<string>("BackText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FrontText")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("LessonTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.MediaTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<string>("Category")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Container")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<decimal>("FileSize")
                        .HasColumnType("numeric(20,0)");

                    b.Property<string>("FileType")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("SourceID")
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("MediaTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.MessageTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileURL")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("RecipientId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("SenderId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("RecipientId");

                    b.HasIndex("SenderId");

                    b.ToTable("MessageTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.NotificationTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsSeen")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserAccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("UserAccountId");

                    b.ToTable("NotificationTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.PostLikeTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("PostId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserAccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("PostId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("PostLikeTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.PostTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("UserAccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserAccountId");

                    b.ToTable("PostTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.QuestionTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<string>("TestId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("TotalCorrectAnswer")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.ToTable("QuestionTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.RoleTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.HasKey("Id");

                    b.ToTable("RoleTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.ScheduleTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DayOfWeek")
                        .HasColumnType("int");

                    b.Property<float>("EndTime")
                        .HasColumnType("real");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("StartTime")
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("ScheduleTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.StreamSessionTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CreatorId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("EndTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxParticipants")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartTime")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("CreatorId");

                    b.ToTable("StreamSessionTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.SubjectTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.ToTable("SubjectTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.TechnicalReportTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<string>("Comment")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Reason")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("UserAccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("UserAccountId");

                    b.ToTable("TechnicalReportTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.TestResultTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<float>("Score")
                        .HasColumnType("real");

                    b.Property<string>("TestId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserAccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("UserAccountTableId")
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("TestId");

                    b.HasIndex("UserAccountId");

                    b.HasIndex("UserAccountTableId");

                    b.ToTable("TestResultTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.TestTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<int>("AllocatedTime")
                        .HasColumnType("int");

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Deadline")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("MaxAttempt")
                        .HasColumnType("int");

                    b.Property<int>("MaxScore")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<int>("TotalAttempt")
                        .HasColumnType("int");

                    b.Property<int>("TotalQuestions")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("TestTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.UserAccountTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("UserAccountTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.UserInfoTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<string>("Address")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateOfBirth")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Gender")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Phone")
                        .HasMaxLength(15)
                        .HasColumnType("nvarchar(15)");

                    b.Property<string>("UserAccountId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("UserAccountId")
                        .IsUnique();

                    b.ToTable("UserInfoTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.UserRankingTable", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("nvarchar(100)")
                        .HasAnnotation("Relational:GeneratedValueSql", "newid()");

                    b.Property<string>("CourseId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("ModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("TotalScore")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.HasIndex("UserId");

                    b.ToTable("UserRankingTables");
                });

            modelBuilder.Entity("BillTableCourseTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.BillTable", null)
                        .WithMany()
                        .HasForeignKey("BillTablesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TASysOnlineProject.Table.CourseTable", null)
                        .WithMany()
                        .HasForeignKey("CourseTablesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CartTableCourseTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.CartTable", null)
                        .WithMany()
                        .HasForeignKey("CartsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TASysOnlineProject.Table.CourseTable", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseTableScheduleTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.CourseTable", null)
                        .WithMany()
                        .HasForeignKey("CoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TASysOnlineProject.Table.ScheduleTable", null)
                        .WithMany()
                        .HasForeignKey("SchedulesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("CourseTableUserAccountTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.CourseTable", null)
                        .WithMany()
                        .HasForeignKey("CoursesOfLearnerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TASysOnlineProject.Table.UserAccountTable", null)
                        .WithMany()
                        .HasForeignKey("LearnerAccountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ScheduleTableUserAccountTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.ScheduleTable", null)
                        .WithMany()
                        .HasForeignKey("SchedulesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TASysOnlineProject.Table.UserAccountTable", null)
                        .WithMany()
                        .HasForeignKey("UserAccountsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TASysOnlineProject.Table.AnswerTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.QuestionTable", "Question")
                        .WithMany("Answers")
                        .HasForeignKey("QuestionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Question");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.BillTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.UserAccountTable", "UserAccount")
                        .WithMany("BillTables")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.CartTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.UserAccountTable", "UserAccount")
                        .WithOne("Cart")
                        .HasForeignKey("TASysOnlineProject.Table.CartTable", "UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.CommentTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.PostTable", "Post")
                        .WithMany("Comments")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TASysOnlineProject.Table.UserAccountTable", "UserAccount")
                        .WithMany("Comments")
                        .HasForeignKey("UserAccountId")
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.CourseSuggestionTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.CourseTable", "Course")
                        .WithMany("CourseSuggestions")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.CourseTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.UserAccountTable", "InstructorAccount")
                        .WithMany("CoursesOfInstrucor")
                        .HasForeignKey("InstructorId");

                    b.HasOne("TASysOnlineProject.Table.SubjectTable", "Subject")
                        .WithMany("Courses")
                        .HasForeignKey("SubjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("InstructorAccount");

                    b.Navigation("Subject");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.CurriCulumTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.CourseTable", "Course")
                        .WithMany("CurriCulums")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.DiscountTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.CourseTable", "Course")
                        .WithOne("Discount")
                        .HasForeignKey("TASysOnlineProject.Table.DiscountTable", "CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.LessonTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.CourseTable", "CourseTables")
                        .WithMany("LessonTables")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CourseTables");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.MessageTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.UserAccountTable", "Recipient")
                        .WithMany("ReceivedMessage")
                        .HasForeignKey("RecipientId")
                        .IsRequired();

                    b.HasOne("TASysOnlineProject.Table.UserAccountTable", "Sender")
                        .WithMany("SentMessage")
                        .HasForeignKey("SenderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Recipient");

                    b.Navigation("Sender");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.NotificationTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.UserAccountTable", "UserAccount")
                        .WithMany("NotificationTables")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.PostLikeTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.PostTable", "Post")
                        .WithMany("PostLikes")
                        .HasForeignKey("PostId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TASysOnlineProject.Table.UserAccountTable", "UserAccount")
                        .WithMany("PostLikes")
                        .HasForeignKey("UserAccountId")
                        .IsRequired();

                    b.Navigation("Post");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.PostTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.CourseTable", "CourseTable")
                        .WithMany("PostTables")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TASysOnlineProject.Table.UserAccountTable", "UserAccount")
                        .WithMany("Posts")
                        .HasForeignKey("UserAccountId")
                        .IsRequired();

                    b.Navigation("CourseTable");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.QuestionTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.TestTable", "Test")
                        .WithMany("Questions")
                        .HasForeignKey("TestId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Test");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.StreamSessionTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.CourseTable", "CourseTable")
                        .WithMany("StreamSessionTables")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TASysOnlineProject.Table.UserAccountTable", "Creator")
                        .WithMany("StreamSessionsCreated")
                        .HasForeignKey("CreatorId")
                        .IsRequired();

                    b.Navigation("CourseTable");

                    b.Navigation("Creator");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.TechnicalReportTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.UserAccountTable", "UserAccount")
                        .WithMany("TechnicalReports")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.TestResultTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.TestTable", "Test")
                        .WithMany("TestResults")
                        .HasForeignKey("TestId")
                        .IsRequired();

                    b.HasOne("TASysOnlineProject.Table.UserAccountTable", "UserAccount")
                        .WithMany("TestResultTables")
                        .HasForeignKey("UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TASysOnlineProject.Table.UserAccountTable", null)
                        .WithMany("TestResults")
                        .HasForeignKey("UserAccountTableId");

                    b.Navigation("Test");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.TestTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.CourseTable", "Course")
                        .WithMany("Tests")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Course");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.UserAccountTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.RoleTable", "Role")
                        .WithMany("UserAccounts")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.NoAction)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.UserInfoTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.UserAccountTable", "UserAccount")
                        .WithOne("UserInfo")
                        .HasForeignKey("TASysOnlineProject.Table.UserInfoTable", "UserAccountId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.UserRankingTable", b =>
                {
                    b.HasOne("TASysOnlineProject.Table.CourseTable", "Course")
                        .WithMany("UserRankings")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TASysOnlineProject.Table.UserAccountTable", "UserAccount")
                        .WithMany("UserRankings")
                        .HasForeignKey("UserId")
                        .IsRequired();

                    b.Navigation("Course");

                    b.Navigation("UserAccount");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.CourseTable", b =>
                {
                    b.Navigation("CourseSuggestions");

                    b.Navigation("CurriCulums");

                    b.Navigation("Discount");

                    b.Navigation("LessonTables");

                    b.Navigation("PostTables");

                    b.Navigation("StreamSessionTables");

                    b.Navigation("Tests");

                    b.Navigation("UserRankings");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.PostTable", b =>
                {
                    b.Navigation("Comments");

                    b.Navigation("PostLikes");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.QuestionTable", b =>
                {
                    b.Navigation("Answers");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.RoleTable", b =>
                {
                    b.Navigation("UserAccounts");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.SubjectTable", b =>
                {
                    b.Navigation("Courses");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.TestTable", b =>
                {
                    b.Navigation("Questions");

                    b.Navigation("TestResults");
                });

            modelBuilder.Entity("TASysOnlineProject.Table.UserAccountTable", b =>
                {
                    b.Navigation("BillTables");

                    b.Navigation("Cart");

                    b.Navigation("Comments");

                    b.Navigation("CoursesOfInstrucor");

                    b.Navigation("NotificationTables");

                    b.Navigation("PostLikes");

                    b.Navigation("Posts");

                    b.Navigation("ReceivedMessage");

                    b.Navigation("SentMessage");

                    b.Navigation("StreamSessionsCreated");

                    b.Navigation("TechnicalReports");

                    b.Navigation("TestResults");

                    b.Navigation("TestResultTables");

                    b.Navigation("UserInfo");

                    b.Navigation("UserRankings");
                });
#pragma warning restore 612, 618
        }
    }
}
